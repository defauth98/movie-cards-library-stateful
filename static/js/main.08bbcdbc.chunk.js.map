{"version":3,"sources":["components/Header.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/TextInput.jsx","components/CheckBoxInput.jsx","components/SelectInput.jsx","components/SearchBar.jsx","components/TextArea.jsx","components/NumberInput.jsx","pages/MovieLibrary.jsx","components/AddMovie.jsx","data.js","App.js","index.js"],"names":["Header","className","React","Component","Rating","rating","this","props","data-testid","defaultProps","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","TextInput","value","onChange","label","testLabelID","testInputID","name","htmlFor","type","CheckBoxInput","checked","SelectInput","options","selectTestID","labelTestID","optionTestID","map","item","key","SearchBar","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","action","TextArea","cols","rows","NumberInput","MovieLibrary","movies","state","genre","handleSearchInput","bind","toggleBookmark","handleGenderInput","filter","addMovie","e","target","setState","concat","filteredMovies","length","includes","bookmarked","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08bbcdbc.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: 0,\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ rating } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../style/components/textInput.css';\n\nfunction TextInput(props) {\n  const { value, onChange, label, testLabelID, testInputID, name } = props;\n\n  return (\n    <div className=\"input-container\">\n      <label\n        htmlFor={ name }\n        data-testid={ testLabelID }\n        className=\"input-label\"\n      >\n        {label}\n        <input\n          type=\"text\"\n          name={ name }\n          value={ value }\n          onChange={ onChange }\n          data-testid={ testInputID }\n          className=\"input-text\"\n        />\n      </label>\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  testLabelID: PropTypes.string.isRequired,\n  testInputID: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../style/components/checkInputbox.css';\n\nfunction CheckBoxInput(props) {\n  const { checked, onChange } = props;\n\n  return (\n    <label\n      htmlFor=\"favorites\"\n      data-testid=\"checkbox-input-label\"\n      className=\"checkbox-label\"\n    >\n      Mostrar somente favoritos:\n      <input\n        type=\"checkbox\"\n        name=\"favorites\"\n        checked={ checked }\n        className=\"checkbox-input\"\n        onChange={ onChange }\n        data-testid=\"checkbox-input\"\n      />\n\n    </label>\n  );\n}\n\nCheckBoxInput.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CheckBoxInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../style/components/selectInput.css';\n\nfunction SelectInput(props) {\n  const {\n    label,\n    value,\n    onChange,\n    options,\n    selectTestID,\n    labelTestID,\n    optionTestID,\n    name,\n  } = props;\n\n  return (\n    <label htmlFor=\"select-input\" data-testid={ labelTestID }>\n      {label}\n\n      <select\n        name={ name }\n        value={ value }\n        onChange={ onChange }\n        data-testid={ selectTestID }\n        className=\"select-input\"\n      >\n        {options && options.map((item) => (\n          <option\n            key={ item.value }\n            data-testid={ optionTestID }\n            value={ item.value }\n          >\n            {item.name}\n\n          </option>))}\n      </select>\n    </label>\n  );\n}\n\nSelectInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectTestID: PropTypes.string.isRequired,\n  labelTestID: PropTypes.string.isRequired,\n  optionTestID: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default SelectInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TextInput from './TextInput';\nimport CheckBoxInput from './CheckBoxInput';\nimport SelectInput from './SelectInput';\n\nclass SearchBar extends Component {\n  render() {\n    const {\n      searchText,\n      onSearchTextChange,\n      bookmarkedOnly,\n      onBookmarkedChange,\n      selectedGenre,\n      onSelectedGenreChange } = this.props;\n\n    const options = [\n      { value: '', name: 'Todos' },\n      { value: 'action', name: 'Ação' },\n      { value: 'comedy', name: 'Comédia' },\n      { value: 'thriller', name: 'Suspense' },\n    ];\n\n    return (\n      <form\n        action=\"\"\n        data-testid=\"search-bar-form\"\n      >\n        <TextInput\n          value={ searchText }\n          onChange={ onSearchTextChange }\n          label=\"Inclui o texto:\"\n          testInputID=\"text-input\"\n          testLabelID=\"text-input-label\"\n          name=\"searchInput\"\n        />\n        <CheckBoxInput checked={ bookmarkedOnly } onChange={ onBookmarkedChange } />\n        <div>\n          <SelectInput\n            value={ selectedGenre }\n            onChange={ onSelectedGenreChange }\n            options={ options }\n            name=\"select-input\"\n            label=\"Filtrar por gênero:\"\n            selectTestID=\"select-input\"\n            labelTestID=\"select-input-label\"\n            optionTestID=\"select-option\"\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.func.isRequired,\n  bookmarkedOnly: PropTypes.bool.isRequired,\n  onBookmarkedChange: PropTypes.func.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TextArea(props) {\n  const { onChange, value } = props;\n\n  return (\n    <label htmlFor=\"storyline\" data-testid=\"storyline-input-label\">\n      Sinopse\n      <textarea\n        name=\"storyline\"\n        cols=\"30\"\n        rows=\"10\"\n        data-testid=\"storyline-input\"\n        onChange={ onChange }\n        value={ value }\n      />\n\n    </label>\n  );\n}\n\nTextArea.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TextArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumberInput(props) {\n  const { value, onChange } = props;\n\n  return (\n    <label htmlFor=\"number-input\" data-testid=\"rating-input-label\">\n      Avaliação\n      <input\n        type=\"number\"\n        name=\"rating\"\n        data-testid=\"rating-input\"\n        value={ value }\n        onChange={ onChange }\n      />\n    </label>\n  );\n}\n\nNumberInput.propTypes = {\n  value: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nNumberInput.defaultProps = {\n  value: 0,\n};\n\nexport default NumberInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieList from '../components/MovieList';\nimport SearchBar from '../components/SearchBar';\nimport AddMovie from '../components/AddMovie';\n\nimport '../style/pages/movieLibrary.css';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    const { movies } = props;\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      genre: '',\n      movies,\n    };\n\n    this.handleSearchInput = this.handleSearchInput.bind(this);\n    this.toggleBookmark = this.toggleBookmark.bind(this);\n    this.handleGenderInput = this.handleGenderInput.bind(this);\n    this.filter = this.filter.bind(this);\n    this.addMovie = this.addMovie.bind(this);\n  }\n\n  handleSearchInput(e) {\n    const { value } = e.target;\n    this.setState({ searchText: value });\n  }\n\n  handleGenderInput(e) {\n    const { value } = e.target;\n    this.setState({ genre: value });\n  }\n\n  addMovie({ subtitle, title, imagePath, storyline, rating, genre }) {\n    const movie = { title, subtitle, imagePath, storyline, rating, genre };\n    const { movies } = this.state;\n\n    this.setState({\n      movies: movies.concat(movie),\n    });\n  }\n\n  toggleBookmark() {\n    const { bookmarkedOnly } = this.state;\n\n    if (bookmarkedOnly) {\n      this.setState({ bookmarkedOnly: false });\n      return;\n    }\n\n    this.setState({ bookmarkedOnly: true });\n  }\n\n  // Li o código do Anderson para fazer essa função\n  // https://github.com/tryber/sd-010-a-project-movie-cards-library-stateful/pull/75/files\n  filter() {\n    const { movies, searchText, bookmarkedOnly, genre } = this.state;\n    let filteredMovies = movies;\n\n    if (searchText.length > 1) {\n      filteredMovies = filteredMovies.filter((movie) => movie.title.includes(searchText)\n        || movie.subtitle.includes(searchText)\n        || movie.storyline.includes(searchText));\n    }\n\n    if (bookmarkedOnly === true) {\n      filteredMovies = filteredMovies.filter((movie) => movie.bookmarked === true);\n    }\n\n    if (genre.length > 1) {\n      filteredMovies = filteredMovies.filter((movie) => movie.genre === genre);\n    }\n\n    return filteredMovies;\n  }\n\n  render() {\n    const { searchText, genre, bookmarkedOnly } = this.state;\n\n    const movies = this.filter();\n\n    return (\n      <div className=\"movie-page\">\n        <h2> My awesome movie library </h2>\n        <SearchBar\n          searchText={ searchText }\n          onSearchTextChange={ this.handleSearchInput }\n          bookmarkedOnly={ bookmarkedOnly }\n          onBookmarkedChange={ this.toggleBookmark }\n          selectedGenre={ genre }\n          onSelectedGenreChange={ this.handleGenderInput }\n        />\n        {/* <MovieList movies={ movies } /> */}\n        {/* <AddMovie onClick={ this.addMovie } /> */}\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieLibrary;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TextInput from './TextInput';\nimport TextArea from './TextArea';\nimport NumberInput from './NumberInput';\nimport SelectInput from './SelectInput';\n\nimport '../style/components/addmovie.css';\n\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { value, name } = e.target;\n\n    this.setState({ [name]: value });\n  }\n\n  handleButtonClick(fn) {\n    fn(this.state);\n\n    this.setState({\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  renderSelect(genre) {\n    const selectOptions = [\n      { value: 'action', name: 'Ação' },\n      { value: 'comedy', name: 'Comédia' },\n      { value: 'thriller', name: 'Suspense' },\n    ];\n\n    return (\n      <SelectInput\n        options={ selectOptions }\n        value={ genre }\n        onChange={ this.handleInputChange }\n        selectTestID=\"genre-input\"\n        labelTestID=\"genre-input-label\"\n        optionTestID=\"genre-option\"\n        name=\"genre\"\n        label=\"Gênero\"\n      />\n    );\n  }\n\n  render() {\n    const { onClick } = this.props;\n    const { title, subtitle, imagePath, storyline, rating, genre } = this.state;\n\n    return (\n      <div id=\"add-movie-container\">\n        <form data-testid=\"add-movie-form\" className=\"addmovie-form\">\n          <TextInput\n            value={ title }\n            onChange={ this.handleInputChange }\n            label=\"Título\"\n            testLabelID=\"title-input-label\"\n            testInputID=\"title-input\"\n            name=\"title\"\n          />\n          <TextInput\n            value={ subtitle }\n            onChange={ this.handleInputChange }\n            label=\"Subtítulo\"\n            testLabelID=\"subtitle-input-label\"\n            testInputID=\"subtitle-input\"\n            name=\"subtitle\"\n          />\n          <TextInput\n            value={ imagePath }\n            onChange={ this.handleInputChange }\n            label=\"Imagem\"\n            testLabelID=\"image-input-label\"\n            testInputID=\"image-input\"\n            name=\"imagePath\"\n          />\n          <TextArea value={ storyline } onChange={ this.handleInputChange } />\n          <div>\n            <NumberInput value={ rating } onChange={ this.handleInputChange } />\n          </div>\n          {this.renderSelect(genre)}\n          <button\n            type=\"button\"\n            data-testid=\"send-button\"\n            onClick={ () => this.handleButtonClick(onClick) }\n          >\n            Adicionar filme\n          </button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\n\nimport Header from './components/Header';\nimport MovieLibrary from './pages/MovieLibrary';\n\nimport movies from './data';\n\nimport './style/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={ movies } />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './style/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
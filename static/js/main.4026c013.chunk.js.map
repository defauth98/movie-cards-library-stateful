{"version":3,"sources":["components/Header.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/TextInput.jsx","components/CheckBoxInput.jsx","components/SelectInput.jsx","components/SearchBar.jsx","components/TextArea.jsx","components/NumberInput.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","data.js","App.js","index.js"],"names":["Header","className","React","Component","Rating","rating","this","props","data-testid","defaultProps","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","MovieList","movies","map","key","TextInput","value","onChange","label","testLabelID","testInputID","name","htmlFor","type","CheckBoxInput","checked","SelectInput","options","selectTestID","labelTestID","optionTestID","item","SearchBar","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","action","TextArea","cols","rows","NumberInput","AddMovie","state","genre","handleInputChange","bind","handleButtonClick","e","target","setState","fn","onClick","id","renderSelect","MovieLibrary","handleSearchInput","toggleBookmark","handleGenderInput","filter","addMovie","concat","filteredMovies","length","includes","bookmarked","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4026c013.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\" data-testid=\"rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nRating.propTypes = { rating: PropTypes.number };\n\nRating.defaultProps = {\n  rating: 0,\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={ rating } />\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div data-testid=\"movie-list\" className=\"movie-list\">\n        { movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />) }\n      </div>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TextInput(props) {\n  const { value, onChange, label, testLabelID, testInputID, name } = props;\n\n  return (\n    <div className=\"text-input\">\n      <label htmlFor={ name } data-testid={ testLabelID }>\n        {label}\n        <input\n          type=\"text\"\n          name={ name }\n          value={ value }\n          onChange={ onChange }\n          data-testid={ testInputID }\n        />\n      </label>\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  testLabelID: PropTypes.string.isRequired,\n  testInputID: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CheckBoxInput(props) {\n  const { checked, onChange } = props;\n\n  return (\n    <label htmlFor=\"favorites\" data-testid=\"checkbox-input-label\">\n      Mostrar somente favoritos:\n\n      <input\n        type=\"checkbox\"\n        name=\"favorites\"\n        checked={ checked }\n        onChange={ onChange }\n        data-testid=\"checkbox-input\"\n      />\n\n    </label>\n  );\n}\n\nCheckBoxInput.propTypes = {\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CheckBoxInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SelectInput(props) {\n  const {\n    label,\n    value,\n    onChange,\n    options,\n    selectTestID,\n    labelTestID,\n    optionTestID,\n    name,\n  } = props;\n\n  return (\n    <label htmlFor=\"select-input\" data-testid={ labelTestID }>\n      {label}\n\n      <select\n        name={ name }\n        value={ value }\n        onChange={ onChange }\n        data-testid={ selectTestID }\n      >\n        {options && options.map((item) => (\n          <option\n            key={ item.value }\n            data-testid={ optionTestID }\n            value={ item.value }\n          >\n            {item.name}\n\n          </option>))}\n      </select>\n    </label>\n  );\n}\n\nSelectInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectTestID: PropTypes.string.isRequired,\n  labelTestID: PropTypes.string.isRequired,\n  optionTestID: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default SelectInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TextInput from './TextInput';\nimport CheckBoxInput from './CheckBoxInput';\nimport SelectInput from './SelectInput';\n\nimport '../style/searchbar.css';\n\nclass SearchBar extends Component {\n  render() {\n    const {\n      searchText,\n      onSearchTextChange,\n      bookmarkedOnly,\n      onBookmarkedChange,\n      selectedGenre,\n      onSelectedGenreChange } = this.props;\n\n    const options = [\n      { value: '', name: 'Todos' },\n      { value: 'action', name: 'Ação' },\n      { value: 'comedy', name: 'Comédia' },\n      { value: 'thriller', name: 'Suspense' },\n    ];\n\n    return (\n      <form action=\"\" data-testid=\"search-bar-form\">\n        <TextInput\n          value={ searchText }\n          onChange={ onSearchTextChange }\n          label=\"Inclui o texto:\"\n          testInputID=\"text-input\"\n          testLabelID=\"text-input-label\"\n          name=\"searchInput\"\n        />\n        <CheckBoxInput checked={ bookmarkedOnly } onChange={ onBookmarkedChange } />\n        <SelectInput\n          value={ selectedGenre }\n          onChange={ onSelectedGenreChange }\n          options={ options }\n          name=\"select-input\"\n          label=\"Filtrar por gênero:\"\n          selectTestID=\"select-input\"\n          labelTestID=\"select-input-label\"\n          optionTestID=\"select-option\"\n        />\n      </form>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  onSearchTextChange: PropTypes.func.isRequired,\n  bookmarkedOnly: PropTypes.bool.isRequired,\n  onBookmarkedChange: PropTypes.func.isRequired,\n  selectedGenre: PropTypes.string.isRequired,\n  onSelectedGenreChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TextArea(props) {\n  const { onChange, value } = props;\n\n  return (\n    <label htmlFor=\"storyline\" data-testid=\"storyline-input-label\">\n      Sinopse\n      <textarea\n        name=\"storyline\"\n        cols=\"30\"\n        rows=\"10\"\n        data-testid=\"storyline-input\"\n        onChange={ onChange }\n        value={ value }\n      />\n\n    </label>\n  );\n}\n\nTextArea.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default TextArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NumberInput(props) {\n  const { value, onChange } = props;\n\n  return (\n    <label htmlFor=\"number-input\" data-testid=\"rating-input-label\">\n      Avaliação\n      <input\n        type=\"number\"\n        name=\"rating\"\n        data-testid=\"rating-input\"\n        value={ value }\n        onChange={ onChange }\n      />\n    </label>\n  );\n}\n\nNumberInput.propTypes = {\n  value: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nNumberInput.defaultProps = {\n  value: 0,\n};\n\nexport default NumberInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TextInput from './TextInput';\nimport TextArea from './TextArea';\nimport NumberInput from './NumberInput';\nimport SelectInput from './SelectInput';\n\nimport '../style/addmovie.css';\n\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleInputChange(e) {\n    const { value, name } = e.target;\n\n    this.setState({ [name]: value });\n  }\n\n  handleButtonClick(fn) {\n    fn(this.state);\n\n    this.setState({\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  renderSelect(genre) {\n    const selectOptions = [\n      { value: 'action', name: 'Ação' },\n      { value: 'comedy', name: 'Comédia' },\n      { value: 'thriller', name: 'Suspense' },\n    ];\n\n    return (\n      <SelectInput\n        options={ selectOptions }\n        value={ genre }\n        onChange={ this.handleInputChange }\n        selectTestID=\"genre-input\"\n        labelTestID=\"genre-input-label\"\n        optionTestID=\"genre-option\"\n        name=\"genre\"\n        label=\"Gênero\"\n      />\n    );\n  }\n\n  render() {\n    const { onClick } = this.props;\n    const { title, subtitle, imagePath, storyline, rating, genre } = this.state;\n\n    return (\n      <div id=\"add-movie-container\">\n        <form data-testid=\"add-movie-form\" className=\"addmovie-form\">\n          <TextInput\n            value={ title }\n            onChange={ this.handleInputChange }\n            label=\"Título\"\n            testLabelID=\"title-input-label\"\n            testInputID=\"title-input\"\n            name=\"title\"\n          />\n          <TextInput\n            value={ subtitle }\n            onChange={ this.handleInputChange }\n            label=\"Subtítulo\"\n            testLabelID=\"subtitle-input-label\"\n            testInputID=\"subtitle-input\"\n            name=\"subtitle\"\n          />\n          <TextInput\n            value={ imagePath }\n            onChange={ this.handleInputChange }\n            label=\"Imagem\"\n            testLabelID=\"image-input-label\"\n            testInputID=\"image-input\"\n            name=\"imagePath\"\n          />\n          <TextArea value={ storyline } onChange={ this.handleInputChange } />\n          <div>\n            <NumberInput value={ rating } onChange={ this.handleInputChange } />\n          </div>\n          {this.renderSelect(genre)}\n          <button\n            type=\"button\"\n            data-testid=\"send-button\"\n            onClick={ () => this.handleButtonClick(onClick) }\n          >\n            Adicionar filme\n          </button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nAddMovie.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default AddMovie;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nimport '../style/movieLibrary.css';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    const { movies } = props;\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      genre: '',\n      movies,\n    };\n\n    this.handleSearchInput = this.handleSearchInput.bind(this);\n    this.toggleBookmark = this.toggleBookmark.bind(this);\n    this.handleGenderInput = this.handleGenderInput.bind(this);\n    this.filter = this.filter.bind(this);\n    this.addMovie = this.addMovie.bind(this);\n  }\n\n  handleSearchInput(e) {\n    const { value } = e.target;\n    this.setState({ searchText: value });\n  }\n\n  handleGenderInput(e) {\n    const { value } = e.target;\n    this.setState({ genre: value });\n  }\n\n  addMovie({ subtitle, title, imagePath, storyline, rating, genre }) {\n    const movie = { title, subtitle, imagePath, storyline, rating, genre };\n    const { movies } = this.state;\n\n    this.setState({\n      movies: movies.concat(movie),\n    });\n  }\n\n  toggleBookmark() {\n    const { bookmarkedOnly } = this.state;\n\n    if (bookmarkedOnly) {\n      this.setState({ bookmarkedOnly: false });\n      return;\n    }\n\n    this.setState({ bookmarkedOnly: true });\n  }\n\n  // Li o código do Anderson para fazer essa função\n  // https://github.com/tryber/sd-010-a-project-movie-cards-library-stateful/pull/75/files\n  filter() {\n    const { movies, searchText, bookmarkedOnly, genre } = this.state;\n    let filteredMovies = movies;\n\n    if (searchText.length > 1) {\n      filteredMovies = filteredMovies.filter((movie) => movie.title.includes(searchText)\n        || movie.subtitle.includes(searchText)\n        || movie.storyline.includes(searchText));\n    }\n\n    if (bookmarkedOnly === true) {\n      filteredMovies = filteredMovies.filter((movie) => movie.bookmarked === true);\n    }\n\n    if (genre.length > 1) {\n      filteredMovies = filteredMovies.filter((movie) => movie.genre === genre);\n    }\n\n    return filteredMovies;\n  }\n\n  render() {\n    const { searchText, genre, bookmarkedOnly } = this.state;\n\n    const movies = this.filter();\n\n    return (\n      <div className=\"movie\">\n        <h2> My awesome movie library </h2>\n        <SearchBar\n          searchText={ searchText }\n          onSearchTextChange={ this.handleSearchInput }\n          bookmarkedOnly={ bookmarkedOnly }\n          onBookmarkedChange={ this.toggleBookmark }\n          selectedGenre={ genre }\n          onSelectedGenreChange={ this.handleGenderInput }\n        />\n        <MovieList movies={ movies } />\n        <AddMovie onClick={ this.addMovie } />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\n\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\n\nimport movies from './data';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={ movies } />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}